// FOS Server Client
#pragma rpc Client ShowTownView (int locId, int mapIndex, int )
#pragma rpc Client ShowGMTown (int locId, int locPid, int, int[]  indexMaps )

#pragma rpc Server Rpc_TransitToMap (int locId, int mapIndex, int )
#pragma rpc Server Rpc_ShowTownView (int locId, int mapIndex, int )
#pragma rpc Server Rpc_ShowGMTown (int )

#ifdef __SERVER

void Rpc_ShowGMTown (Critter  cr, int) 
{
    Location[] locs;
	locs = GetVisibleLocations( cr.WorldX, cr.WorldY, 0, cr );
    if( locs.length() == 0 )
        return;

    Location loc = locs[ 0 ];
    hash[] entraceMaps = loc.MapEntrances.clone();
    hash[] mapProtos = loc.MapProtos.clone();
    int[] indexMaps;
    for( uint i = 0; i < entraceMaps.length(); i += 2 )
        indexMaps.insertLast( mapProtos.find( entraceMaps[ i ] ) );

    cr.Rpc.ShowGMTown( loc.Id, loc.ProtoId, 0, indexMaps );
}

void Rpc_ShowTownView (Critter  cr, int locId, int mapIndex, int) 
{
    Location loc = GetLocation( locId );
    Map      map = loc.GetMapByIndex( mapIndex );
    hash[] entraceMaps = loc.MapEntrances.clone();
    int       entNum = entraceMaps.find( map.ProtoId );
    if( entNum == -1 )
        return;

    entNum = entraceMaps[ entNum + 1 ];
    uint16 hx = 0, hy = 0;
    cr.Rpc.ShowTownView( locId, mapIndex, 0 );
    // map.GetEntireCoords( entNum, 0, hx, hy );
    // cr.ViewMap( map, 40, map.Width / 2, map.Height / 2, 3 );
}

void Rpc_TransitToMap (Critter  cr, int locId, int mapIndex, int)
{
    Location loc = GetLocation( locId );
    Map      map = loc.GetMapByIndex( mapIndex );
    hash[] entraceMaps = loc.MapEntrances.clone();
    int       entNum = entraceMaps.find( map.ProtoId );
    if( entNum == -1 )
        return;
    entNum = entraceMaps[ entNum + 1 ];
    uint16 hx = 0, hy = 0;
    map.GetEntireCoords( entNum, 0, hx, hy );
    Obsolete::CritterTransitToMapCoords( cr, map.Id, map.Width / 2, map.Height / 2, Random( 0, 5 )  );
}
#endif

#ifdef __CLIENT
void ShowGMTown (int locId, int locPid, int, int[]  indexMaps )
{
    dictionary params = {   { "LocationId", locId },
                            { "LocationPid", locPid },
                            { "IndexMaps", indexMaps } };
    ShowScreen( CLIENT_SCREEN_GM_TOWN, params );
}

void ShowTownView (int locId, int mapIndex, int )
{
    HideScreen();
    dictionary params = {   { "LocationId", locId },
                            { "MapIndex", mapIndex } };
    ShowScreen( CLIENT_SCREEN_TOWN_VIEW, params );
}
#endif
