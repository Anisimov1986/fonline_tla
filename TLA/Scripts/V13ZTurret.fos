// FOS Server
// Author: Sufir

#include "Tla"
#include "V13ZGuard"

void _TurretInit( Critter& turret, bool firstTime )
{
    turret.IsNoSupply = true;
    __EventCritterMessage.SubscribeToCritter( turret, _TurretGetMessage );
    __EventCritterAttacked.SubscribeToCritter( turret, _FriendlyFire );
    __EventCritterAttack.SubscribeToCritter( turret, _FriendlyFire2 );
}

void _TurretGetMessage( Critter& turret, Critter& fromCr, int message, int value )
{
    if( !turret.IsLife() )
        return;

    if( message == MSG_V13_GUARD_ALARM )
    {
        Critter@ player = GetCritter( value );
        if( !valid( player ) )
            return;
        if( !player.IsPlayer() )
            return;
        AddAttackPlane( turret, 0, player.Id, int(float(player.CharismaBase) * 1.5) );
        // turret.AddEnemyToStack( player.Id );
    }
    else if( message == MSG_V13_GUARD_KILL )
    {
        Critter@ player = GetCritter( value );
        if( !valid( player ) )
            return;
        if( !player.IsPlayer() )
            return;
        AddAttackPlane( turret, 0, player.Id );
    }
}
bool _FriendlyFire2( Critter& critter, Critter& target, Item& weapon, uint8 weaponMode, const Item@ ammo )
{
	return _FriendlyFire(critter, target);
}
// Если NPC атакован одним из "своих" - не атакуем его.
bool _FriendlyFire( Critter& guardian, Critter& attacker )
{
    if( guardian.IsNpc() && attacker.IsNpc() )
    {
        if( guardian.NpcRole == ROLE_GUARDIAN || guardian.NpcRole == ROLE_SOLDIER )
        {
            guardian.Wait( 5000 );
            attacker.Wait( 5000 );
            if( guardian.CheckEnemyInStack( attacker.Id ) )
                guardian.EraseEnemyFromStack( attacker.Id );
            if( attacker.CheckEnemyInStack( guardian.Id ) )
                attacker.EraseEnemyFromStack( guardian.Id );
            EraseAttackPlane( attacker, guardian.Id );
            EraseAttackPlane( guardian, attacker.Id );
            return true;
        }
    }
    return false;
}
