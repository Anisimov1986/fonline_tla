// FOS Server

#include "Tla"

import void DeclareSiegeEvent( Map& map ) from "NcrSiege";
import void DisableForceField( uint[]& values ) from "EnergyBarier";
import void EnableForceField( uint[]& values ) from "EnergyBarier";
import uint GetNearFullSecond( uint16 year, uint16 month, uint16 day, uint16 hour, uint16 minute, uint16 second ) from "Time";

void _MapInit( Map& downtown, bool firstTime )
{
    if( firstTime )
        DeclareSiegeEvent( downtown );
    uint16 year = 0, month = 0, day = 0, dayOfWeek = 0, hour = 0, minute = 0, second = 0;
    uint[] values;
    values.insertLast( 1 );
    Location@ loc = downtown.GetLocation();
    if( !valid( loc ) )
    {
        Log( "Error: location not valid" );
        return;
    }
    values.insertLast( loc.Id );
    DeferredCall( GAME_SECOND_TO_TICK( GetNearFullSecond( 0, 0, 0, 6, 0, 0 ) - __FullSecond ), RepeatableDisableForceField, values );
    DeferredCall( GAME_SECOND_TO_TICK( GetNearFullSecond( 0, 0, 0, 20, 0, 0 ) - __FullSecond ), RepeatableEnableForceField, values );
    GetGameTime( __FullSecond, year, month, day, dayOfWeek, hour, minute, second );
    if( hour >= 20 || hour < 5 )
        DeferredCall( 0, EnableForceField, values );
}

void RepeatableDisableForceField( uint[]& values )
{
    DeferredCall( 0, DisableForceField, values );
    DeferredCall( GAME_DAY_TO_TICK( 1 ), RepeatableDisableForceField, values );
}

void RepeatableEnableForceField( uint[]& values )
{
    DeferredCall( 0, EnableForceField, values );
    DeferredCall( GAME_DAY_TO_TICK( 1 ), RepeatableEnableForceField, values );
}
