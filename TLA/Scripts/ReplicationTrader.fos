// FOS Server
// Name: replication_trader
// Author: Sufir
// Edited by:

#include "Tla"

import void SetDeterioration( Item& item, int deteriorationProcent ) from "Repair";

// Defines
uint FreeEquipTime = 0;
uint FreeEquipPlayer = 0;


void r_GiveEquip( Critter& player, Critter@ npc )
{

    GiveArmor( player );
    GiveDrugs( player );
    GiveWeapon( player );
    GiveAnything( player );
    // Устанавливаем таймаут. Бесплатное снаряжение дается не чаще двух раз в сутки и не дается два раза подряд одному игроку.
    FreeEquipTime = __FullSecond;
    FreeEquipPlayer = player.Id;

}


bool d_EquipAllow( Critter& player, Critter@ npc )
{

    // Если прошло 6 часов и не этот игрок в последний раз просил снаряжение, даем ему комплект.
    if( FreeEquipTime + ( 60 * 60 * 6 ) < __FullSecond && player.Id != FreeEquipPlayer )
    {
        return true;
        // Если прошло 24 часов и этот игрок в последний раз просил снаряжение, даем ему ещё один комплект.
    }
    else if( FreeEquipTime + ( 60 * 60 * 24 ) < __FullSecond && player.Id == FreeEquipPlayer )
    {
        return true;
    }
    return false;

}


void GiveWeapon( Critter& player )
{

    uint Roll = Random( 0, player.Luck ) + player.SkillSpeech / 10;
    uint ItemPid = Content::Item::knife;
    if( Roll > 0 && Roll <= 10 )
    {
        if( Random( 0, 1 ) == 0 )
        {
            ItemPid = Content::Item::knife;
        }
        else
        {
            ItemPid = Content::Item::spiked_knuckles;
        }
    }
    if( Roll > 10 && Roll <= 15 )
    {
        if( Random( 0, 1 ) == 0 )
        {
            ItemPid = Content::Item::shotgun;
            player.AddItem( Content::Item::shotgun_shells, Random( 0, player.Luck * 2 ) );
        }
        else
        {
            ItemPid = Content::Item::_10mm_pistol;
            player.AddItem( Content::Item::_10mm_jhp, Random( 0, player.Luck * 2 ) );
        }
    }
    if( Roll > 15 && Roll <= 20 )
    {
        if( Random( 0, 1 ) == 0 )
        {
            ItemPid = Content::Item::hunting_rifle;
            player.AddItem( Content::Item::_223_fmj, Random( 0, player.Luck * 2 ) );
        }
        else
        {
            ItemPid = Content::Item::desert_eagle;
            player.AddItem( Content::Item::_44_magnum_jhp, Random( 0, player.Luck * 2 ) );
        }
    }
    if( Roll > 20 )
    {
        if( Random( 0, 1 ) == 0 )
        {
            ItemPid = Content::Item::_223_pistol;
            player.AddItem( Content::Item::_223_fmj, Random( 0, player.Luck * 2 ) );
        }
        else
        {
            ItemPid = Content::Item::combat_shotgun;
            player.AddItem( Content::Item::shotgun_shells, Random( 0, player.Luck * 2 ) );
        }
    }
    Item@ Weapon = player.AddItem( ItemPid, 1 );
    if( !valid( Weapon ) )
        return;
    Weapon.Cost = Roll;
    if( Weapon.Deteriorable )
    {
        SetDeterioration( Weapon, Random( 9, 99 - Roll ) );
        switch( Random( 0, 8 ) )
        {
        case 0:
            SETFLAG( Weapon.BrokenFlags, BI_LOWBROKEN );
            break;
        case 1:
            SETFLAG( Weapon.BrokenFlags, BI_NORMBROKEN );
            break;
        case 2:
            SETFLAG( Weapon.BrokenFlags, BI_HIGHBROKEN );
            break;
        case 3:
            SETFLAG( Weapon.BrokenFlags, BI_NOTRESC );
            break;
        case 4:
            SETFLAG( Weapon.BrokenFlags, BI_BROKEN );
            break;
        case 5:
            SETFLAG( Weapon.BrokenFlags, BI_SERVICE );
            break;
        case 6:
            SETFLAG( Weapon.BrokenFlags, BI_SERVICE_EXT );
            break;
        case 7:
            SETFLAG( Weapon.BrokenFlags, BI_ETERNAL );
            break;
        case 8:
            break;
        default:
            break;
        }
    }

}


void GiveArmor( Critter& player )
{

    uint Roll = Random( 0, player.Luck ) + player.SkillSpeech / 10;
    uint ItemPid = Content::Item::leather_jacket;
    if( Roll > 0 && Roll <= 10 )
    {
        if( Random( 0, 1 ) == 0 )
        {
            ItemPid = Content::Item::leather_jacket;
        }
        else
        {
            ItemPid = Content::Item::purple_robe;
        }
    }
    if( Roll > 10 && Roll <= 15 )
    {
        if( Random( 0, 1 ) == 0 )
        {
            ItemPid = Content::Item::leather_armor;
        }
        else
        {
            ItemPid = Content::Item::leather_jacket;
        }
    }
    if( Roll > 15 && Roll <= 30 )
    {
        if( Random( 0, 1 ) == 0 )
        {
            ItemPid = Content::Item::metal_armor;
        }
        else
        {
            ItemPid = Content::Item::leather_armor;
        }
    }
    if( Roll > 30 )
    {
        if( Random( 0, 1 ) == 0 )
        {
            ItemPid = Content::Item::metal_armor;
        }
        else
        {
            ItemPid = Content::Item::combat_armor;
        }
    }
    Item@ Armor = player.AddItem( ItemPid, 1 );
    if( !valid( Armor ) )
        return;
    Armor.Cost = Roll;
    if( Armor.Deteriorable )
    {
        SetDeterioration( Armor, Random( 19, 99 - Roll ) );
        switch( Random( 0, 8 ) )
        {
        case 0:
            SETFLAG( Armor.BrokenFlags, BI_LOWBROKEN );
            break;
        case 1:
            SETFLAG( Armor.BrokenFlags, BI_NORMBROKEN );
            break;
        case 2:
            SETFLAG( Armor.BrokenFlags, BI_HIGHBROKEN );
            break;
        case 3:
            SETFLAG( Armor.BrokenFlags, BI_NOTRESC );
            break;
        case 4:
            SETFLAG( Armor.BrokenFlags, BI_BROKEN );
            break;
        case 5:
            SETFLAG( Armor.BrokenFlags, BI_SERVICE );
            break;
        case 6:
            SETFLAG( Armor.BrokenFlags, BI_SERVICE_EXT );
            break;
        case 7:
            SETFLAG( Armor.BrokenFlags, BI_ETERNAL );
            break;
        case 8:
            break;
        default:
            break;
        }
    }

}


void GiveDrugs( Critter& player )
{

    switch( Random( 0, player.Luck ) )
    {
    case 0:
        break;
    case 1:
        player.AddItem( Content::Item::nuka_cola, 1 );
        break;
    case 2:
        player.AddItem( Content::Item::bottle_full, 1 );
        break;
    case 3:
        player.AddItem( Content::Item::antidote, 1 );
        break;
    case 4:
        player.AddItem( Content::Item::stimpak, 1 );
        break;
    case 5:
        player.AddItem( Content::Item::stimpak, 2 );
        break;
    case 6:
        player.AddItem( Content::Item::buffout, 1 );
        break;
    case 7:
        player.AddItem( Content::Item::rad_x, 1 );
        break;
    case 8:
        player.AddItem( Content::Item::super_stimpak, 1 );
        break;
    case 9:
        player.AddItem( Content::Item::radaway, 1 );
        break;
    case 10:
        player.AddItem( Content::Item::mentats, 1 );
        break;
    default:
        break;
    }

}


void GiveAnything( Critter& player )
{

    if( player.SkillSpeech > 90 )
    {
        switch( Random( 0, ( player.Luck + player.Charisma ) / 2 ) )
        {
        case 0:
            break;
        case 1:
            player.AddItem( Content::Item::nuka_cola, 1 );
            break;
        case 2:
            player.AddItem( Content::Item::bottle_full, 1 );
            break;
        case 3:
            player.AddItem( Content::Item::lighter, 1 );
            break;
        case 4:
            player.AddItem( Content::Item::rope, 1 );
            break;
        case 5:
            player.AddItem( Content::Item::lockpicks, 1 );
            break;
        case 6:
            player.AddItem( Content::Item::first_aid_kit, 1 );
            break;
        case 7:
            player.AddItem( Content::Item::first_aid_book, 1 );
            break;
        case 8:
            player.AddItem( Content::Item::scout_handbook, 1 );
            break;
        case 9:
            player.AddItem( Content::Item::psycho, 1 );
            break;
        case 10:
            player.AddItem( Content::Item::jet_antidote, 1 );
            break;
        default:
            break;
        }
    }

}
