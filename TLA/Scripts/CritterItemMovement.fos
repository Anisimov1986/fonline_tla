// FOS Server Client

// Author: cvet
#include "Tla"

// //////////////////////////////////////////////////////////////////////////////////////////////////
// Call on something critter want move item from one slot to another.
// Return true to allow transaction, false to disallow.
// Function must exist on server and client side.
bool critter_check_move_item( Critter& cr, Item& item, uint8 toSlot, Item@ itemSwap )
{
    uint8 fromSlot = item.CritSlot;

    // Drop
    if( toSlot == SLOT_GROUND )
        return true;

    // If busy, then allow only hands item swapping
    bool handsSwap = ( ( fromSlot == SLOT_HAND1 && toSlot == SLOT_HAND2 ) || ( fromSlot == SLOT_HAND2 && toSlot == SLOT_HAND1 ) );
    if( valid( itemSwap ) && !handsSwap )
        return false;

    // Weapon animation
    if( toSlot == SLOT_HAND1 )
    {
        if( item.Type == Weapon && !IsCritterAnim1( cr.CrType, item.Weapon_Anim1 ) )
            return false;
    }

    // Armor animation
    if( toSlot == SLOT_ARMOR )
    {
        if( item.Type != Armor )
            return false;
        if( item.Slot != SLOT_INV )
            return false;
        if( !IsCritterCanArmor( cr.CrType ) )
            return false;
    }

    // Custom slot checks
    if( toSlot > SLOT_ARMOR )
    {
        if( toSlot != item.Slot )
            return false;
    }

    // Allow moving
    return true;
}

#ifdef __SERVER
// //////////////////////////////////////////////////////////////////////////////////////////////////
// Call on critter item moved.
void critter_move_item( Critter& cr, Item& item, uint8 fromSlot )
{
    uint8 toSlot = item.CritSlot;

    // Armor changing
    if( item.Type == Armor && ( fromSlot == SLOT_ARMOR || toSlot == SLOT_ARMOR ) )
    {
        if( GetCritterAnimType( cr.CrType ) != ANIM_TYPE_3D )
        {
            // Default dude
            bool isMale = ( cr.Gender == GENDER_MALE );
            uint crType = cr.BaseCrType;
            if( crType == 0 )
                crType = ( isMale ? CRTYPE_DEFAULT_M : CRTYPE_DEFAULT_F );
            if( toSlot == SLOT_ARMOR )
                crType = ( isMale ? item.Armor_CrTypeMale : item.Armor_CrTypeFemale );

            // Long hair dude redirects
            if( cr.BaseCrType == CRTYPE_LHD_JUMPSUIT && isMale )
            {
                crType = CRTYPE_LHD_JUMPSUIT;
                if( toSlot == SLOT_ARMOR )
                {
                    crType = item.Armor_CrTypeMale;
                    if( crType == CRTYPE_DW_LEATHER_ARMOR_M )
                        crType = CRTYPE_LHD_LEATHER_ARMOR;
                    else if( crType == CRTYPE_DW_LEATHER_JACKET_M )
                        crType = CRTYPE_LHD_LEATHER_JACKET;
                    else if( crType == CRTYPE_DW_METAL_ARMOR_M )
                        crType = CRTYPE_LHD_METAL_ARMOR;
                }
            }

            if( cr.CrType != crType )
                cr.ChangeCrType( crType );
        }

        // Armor modifier
        cr.CurrentArmorPerk = ( toSlot == SLOT_ARMOR ? item.Armor_Perk : 0 );
    }

    // Slot modifiers
    // SLOT_PERK_MIRROR_SHADES // +1 charisma
    // SLOT_PERK_COSMETIC_CASE // +1 charisma to female
    // SLOT_PERK_MOTION_SENSOR // +20 outdoorsman
    // SLOT_PERK_STEALTH_BOY   // +20 sneak
}
#endif
