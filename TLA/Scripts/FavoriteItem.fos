// FOS Server

void ModuleInit()
{
    __EventCritterIdle.Subscribe( OnCritterIdle );
}

void OnCritterIdle( Critter& cr )
{
    if( !cr.IsNpc() || cr.IsNoFavoriteItem )
        return;

    hash[] pids = cr.FavoriteItemPid;
    for( uint i = 1; i < pids.length(); i++ )
    {
        const Item@ slotItem = cr.GetSlotItem( i );
        hash slotItemPid = ( slotItem !is null ? slotItem.ProtoId : 0 );
        if( pids[ i ] != slotItemPid )
        {
            if( slotItem !is null )
            {
                cr.MoveItem( slotItem.Id, 0, SLOT_INV );;
                break;
            }
            else if( pids[ i ] != 0 )
            {
                Item@ item = cr.GetItem( pids[ i ], SLOT_INV );
                if( item !is null )
                {
					cr.MoveItem( item.Id, 0, i );
                    break;
                }
            }
        }
    }
}

hash GetFavoriteItemPid(Critter& cr, uint slot)
{
	hash[] pids = cr.FavoriteItemPid;
	if(slot > 0 && slot < pids.length())
		return pids[ slot ];
	return 0;
}

void SetFavoriteItemPid(Critter& cr, int slot, hash pid)
{
	if(slot > 0)
	{
		hash[] pids = cr.FavoriteItemPid;
		int len = pids.length();
		if(len <= slot)
		{
			pids.resize( slot + 1 );
		}
		pids[ slot ] = pid;
		cr.FavoriteItemPid = pids;
	}
}